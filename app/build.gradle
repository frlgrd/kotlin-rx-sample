apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

buildscript {
    ext.androidVersion = '27.0.0'
    ext.kotlinVersion = '1.1.51'
    ext.retrofitVersion = '2.2.0'
    ext.okhttpVersion = '3.6.0'
    ext.testToolsVersion = '1.0.1'
    ext.ankoVersion = '0.10.1'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.google.com"
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "com.mobiapps.koltintest"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        buildConfigField "int", "LIMIT", "100"
        buildConfigField "String", "BASEURL", "\"http://ws.audioscrobbler.com\""

        buildConfigField "String", "API_KEY", "${getLocalProperties('apiKey')}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

def getLocalProperties(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName]
    } else {
        return ""
    }
}

kapt {
    generateStubs = true
}

dependencies {
    //Android SDK
    compile "com.android.support:appcompat-v7:$androidVersion"
    compile "com.android.support:design:$androidVersion"
    compile "com.android.support:cardview-v7:$androidVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    //Anko
    compile "org.jetbrains.anko:anko:$ankoVersion"
    compile "org.jetbrains.anko:anko-sdk25:$ankoVersion"
    compile "org.jetbrains.anko:anko-appcompat-v7:$ankoVersion"
    compile "org.jetbrains.anko:anko-design:$ankoVersion"
    compile "org.jetbrains.anko:anko-recyclerview-v7:$ankoVersion"

    //Dagger 2
    compile 'com.google.dagger:dagger:2.10'
    kapt 'com.google.dagger:dagger-compiler:2.10'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    //Rx dependencies
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
    compile 'io.reactivex.rxjava2:rxkotlin:2.1.0'

    //Network
    compile "com.squareup.picasso:picasso:2.5.2"
    compile "com.squareup.okhttp3:okhttp:$okhttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    compile("com.squareup.retrofit2:retrofit:$retrofitVersion") {
        exclude module: 'okhttp'
    }
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    compile 'com.google.code.gson:gson:2.8.2'

    //Test
    testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.22'
    testCompile 'org.assertj:assertj-core:3.5.2'
    androidTestCompile "com.android.support.test:runner:$testToolsVersion"
    androidTestCompile "com.android.support.test:rules:$testToolsVersion"
    androidTestCompile "com.android.support:support-annotations:$androidVersion"
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}